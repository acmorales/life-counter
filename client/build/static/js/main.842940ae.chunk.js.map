{"version":3,"sources":["serviceWorker.js","components/Landing.js","shared/helpers.js","components/PlayerJoin.js","components/PlayerCard.js","components/LifeDisplay.js","components/Dashboard.js","components/Error.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Landing","react_default","a","createElement","className","Link","to","type","Component","getRandomColor","x","Math","floor","random","y","z","concat","PlayerJoin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleColorChange","color","setState","handleChange","e","field","newVal","target","value","defineProperty","handleSubmit","_this$state","state","socket","id","payload","name","life","emit","uuidv4","_this2","_this$state2","styles","backgroundColor","style","onClick","role","tabIndex","onChange","defaultValue","placeholder","autoFocus","PlayerCard","_this$props","LifeDisplay","getPlayers","asyncToGenerator","regenerator_default","mark","_callee","response","responseJSON","wrap","_context","prev","next","fetch","sent","json","status","Error","message","players","stop","on","list","_","map","player","key","components_PlayerCard","toUpperCase","Dashboard","getInfo","userId","handleLifeChange","update","params","io","App","BrowserRouter","Switch","Route","path","exact","component","render","components_PlayerJoin","assign","components_LifeDisplay","components_Dashboard","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.842940ae.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/Landing.css';\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"menu\">\n          <Link to=\"/board/\"><button type=\"button\">HOST</button></Link>\n          <Link to=\"/join/\"><button type=\"button\">JOIN</button></Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","export const getRandomColor = () => {\n  const x = Math.floor(Math.random() * 256);\n  const y = Math.floor(Math.random() * 256);\n  const z = Math.floor(Math.random() * 256);\n  return `rgb(${x}, ${y}, ${z})`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport uuidv4 from 'uuid/v4';\n\nimport { getRandomColor } from '../shared/helpers';\nimport '../styles/Landing.css';\n\nclass PlayerJoin extends Component {\n  constructor(props) {\n    super(props);\n\n    const { socket } = this.props;\n    const id = uuidv4();\n    const color = getRandomColor();\n\n    this.state = {\n      socket,\n      color,\n      id,\n      name: null,\n      life: 40,\n    };\n  }\n\n  handleColorChange = () => {\n    const color = getRandomColor();\n    this.setState({\n      color,\n    });\n  }\n\n  handleChange = (e, field) => {\n    const newVal = e.target.value;\n\n    this.setState({\n      [field]: newVal,\n    });\n  }\n\n  handleSubmit = () => {\n    const {\n      socket,\n      id,\n      color,\n      name,\n      life,\n    } = this.state;\n    const payload = {\n      id,\n      name,\n      life,\n      color,\n    };\n\n    socket.emit('playerJoin', payload);\n  }\n\n  render() {\n    const { id, color, life } = this.state;\n    const styles = {\n      backgroundColor: color,\n    };\n\n    return (\n      <div className=\"page\" style={styles}>\n        <div className=\"background\" onClick={this.handleColorChange} role=\"button\" tabIndex={0} />\n        <form className=\"playerForm\">\n          <input className=\"lifeInput\" onChange={(e) => this.handleChange(e, 'life')} defaultValue={life} type=\"number\" />\n          <input className=\"nameInput\" onChange={(e) => this.handleChange(e, 'name')} placeholder=\"Enter name\" autoFocus type=\"text\" />\n          <Link to={`/dashboard/${id}`}><button type=\"button\" onClick={this.handleSubmit}>Submit</button></Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nPlayerJoin.propTypes = {\n  socket: PropTypes.shape({}).isRequired,\n};\n\nexport default PlayerJoin;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/LifeDisplay.css';\n\nclass PlayerCard extends Component {\n  render() {\n    const { name, life } = this.props;\n\n    return (\n      <div className=\"player_card\">\n        <div className=\"player_info\">\n          <div className=\"player_life\">{life}</div>\n          <div className=\"player_name\">{name}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPlayerCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  life: PropTypes.number.isRequired,\n};\n\nexport default PlayerCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport PlayerCard from './PlayerCard';\n\nimport '../styles/LifeDisplay.css';\n\nclass LifeDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    const { socket } = this.props;\n\n    this.state = {\n      players: [],\n    };\n\n    socket.on('listUpdate', (list) => {\n      this.setState({\n        players: list,\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlayers();\n  }\n\n  getPlayers = async () => {\n    const response = await fetch('/getPlayers');\n    const responseJSON = await response.json();\n\n    if (response.status !== 200) throw Error(responseJSON.message);\n\n    this.setState({\n      players: responseJSON,\n    });\n  }\n\n  render() {\n    const { players } = this.state;\n\n    return (\n      <div className=\"board\">\n        {_.map(players, (player) => {\n          const { color } = player;\n          const styles = {\n            backgroundColor: color,\n          };\n\n          return (\n            <div key={player.id} style={styles}>\n              <PlayerCard key={player.id} name={player.name.toUpperCase()} life={player.life} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nLifeDisplay.propTypes = {\n  socket: PropTypes.shape({}).isRequired,\n};\n\nexport default LifeDisplay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/Dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      match: { params },\n      socket,\n    } = this.props;\n\n    this.state = {\n      socket,\n      userId: params.userId,\n      life: null,\n      color: null,\n      name: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getInfo();\n  }\n\n  getInfo = async () => {\n    const { userId } = this.state;\n    const response = await fetch(`/user/?userId=${userId}`);\n    const responseJSON = await response.json();\n\n    if (response.status !== 200) throw Error(responseJSON.message);\n\n    const { life, color, name } = responseJSON;\n    this.setState({\n      life,\n      color,\n      name,\n    });\n  }\n\n  handleLifeChange = (update) => {\n    const { socket, userId, life } = this.state;\n    const newVal = life + update;\n    const payload = {\n      userId,\n      life: newVal,\n    };\n\n    socket.emit('lifeUpdate', payload);\n\n    this.setState({\n      life: newVal,\n    });\n  }\n\n  render() {\n    const {\n      userId,\n      name,\n      color,\n      life,\n    } = this.state;\n\n    return (\n      <div className=\"dashboard\">\n        <button onClick={() => this.handleLifeChange(-1)} type=\"button\">-</button>\n        <p>{life}</p>\n        <button onClick={() => this.handleLifeChange(1)} type=\"button\">+</button>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  match: PropTypes.shape({}).isRequired,\n  socket: PropTypes.shape({}).isRequired,\n};\n\nexport default Dashboard;\n","import React, { Component } from 'react';\n\nclass Error extends Component {\n  render() {\n    return (\n      <p>404 Try again!!!!!!</p>\n    );\n  }\n}\n\nexport default Error;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Landing from './Landing';\nimport PlayerJoin from './PlayerJoin';\nimport LifeDisplay from './LifeDisplay';\nimport Dashboard from './Dashboard';\nimport Error from './Error';\n\nconst socket = io();\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={Landing} />\n      <Route path=\"/join/\" exact render={(props) => <PlayerJoin {...props} socket={socket} />} />\n      <Route path=\"/board/\" exact render={(props) => <LifeDisplay {...props} socket={socket} />} />\n      <Route path=\"/dashboard/:userId\" render={(props) => <Dashboard {...props} socket={socket} />} />\n      <Route component={Error} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}